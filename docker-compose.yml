version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.7.0
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"
  redis:
    image: "redis:6-alpine"
    ports:
      - "6379:6379"

  minio:
    image: "minio/minio:latest"
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # MinIO API
      - "9001:9001"   # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: hocuspocus-documents,hocuspocus-test
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket initialization
  minio-init:
    image: "minio/mc:latest"
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin; do echo 'Waiting for MinIO...' && sleep 1; done;
      /usr/bin/mc mb myminio/hocuspocus-documents --ignore-existing;
      /usr/bin/mc mb myminio/hocuspocus-test --ignore-existing;
      /usr/bin/mc anonymous set public myminio/hocuspocus-documents;
      /usr/bin/mc anonymous set public myminio/hocuspocus-test;
      echo 'MinIO buckets initialized successfully';
      exit 0;
      "

volumes:
  minio_data:
